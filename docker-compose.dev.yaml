services:
  # PostgreSQL for development
  db:
    image: postgres:15 # Use official Postgres image
    container_name: pg # Optional: name the container
    restart: unless-stopped # Restart unless manually stopped (safer than always)
    env_file:
      - .env.dev
    ports:
      - "${DB_PORT}:${DB_PORT}" # Expose PostgreSQL to localhost for tools
    volumes:
      - pgdata:/var/lib/postgresql/data # Persist Postgres data locally

  # Node.js app container for development
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: app-dev # Name the dev container
    depends_on:
      - db # Wait for db to be started
    ports:
      - "${PORT}:${PORT}" # Expose app on localhost:3000
    volumes:
      - .:/app # 🔁 Bind mount for live reloading (ts-node-dev)
      # // TODO: This might be needed for prod (dotenv thing)
    command: sh -c "npx dotenv -e .env.dev -- prisma migrate dev --name init && npx dotenv -e .env.dev -- prisma generate && npm run dev" # 🧠 Start dev server with hot reload
    environment:
      NODE_ENV: development # Ensure app runs in development mode
    env_file:
      - .env.dev # 🔐 Secure secrets file (do NOT commit)

volumes:
  pgdata:
