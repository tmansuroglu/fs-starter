services:
  # PostgreSQL service for production
  db:
    image: postgres:15 # Use stable official PostgreSQL image
    container_name: pg # Optional: name the container for reference
    restart: always # Restart if it crashes
    env_file:
      - .env.prod
    ports:
      - "${DB_PORT}:${DB_PORT}" # Expose PostgreSQL for tools
    volumes:
      - pgdata:/var/lib/postgresql/data # Persist data to prevent loss on restart/rebuild

  # Node.js app container (production mode)
  app:
    build:
      context: . # Docker build context (project root)
      dockerfile: Dockerfile.prod # Use multi-stage production Dockerfile
    container_name: app # Name of the app container
    restart: always # Restart the app on failure
    depends_on:
      - db # Ensure db starts before the app
    ports:
      - "${PORT}:${PORT}" # Expose app port to host
    command: > # Run DB migration + start server
      sh -c "npx prisma migrate deploy && node dist/index.js"
    environment:
      NODE_ENV: production # Ensure app runs in production mode
    env_file:
      - .env.prod # 🔐 Secure secrets file (do NOT commit)

volumes:
  pgdata: # Named volume to persist PostgreSQL data
